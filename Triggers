CREATE OR REPLACE TRIGGER SAVE_RESERVAS
    AFTER INSERT ON RESERVA
        FOR EACH ROW
        DECLARE
            V_CLIENTE VARCHAR2(50);
            V_FECHA DATE;
        BEGIN
            SELECT USER INTO V_USERNAME FROM DUAL;
            SELECT SYSDATE INTO V_FECHA FROM DUAL;
            INSERT INTO 


Actualizar el estado del inmueble al cancelar reserva.

CREATE TRIGGER TR_RESERVA_CANCELAR
ON RESERVA
FOR DELETE
AS
    UPDATE INMUEBLE SET DISPONIBILIDAD=INMUEBLE.DISPONIBILIDAD+DELETED.IDINMUEBLE
    FROM INMUEBLE
    JOIN DELETED
    ON DELETED.IDINMUEBLE=INMUEBLES.ID;
    
    
    
    Asignar un identificador cuando se realice un update a persona.
    
     CREATE TRIGGER trigger_persona_identificador
AFTER UPDATE ON persona
FOR EACH ROW
BEGIN 
   DECLARE $identificador TEXT;
   SET $identificador = CONCAT(NEW.idpersona, '_', NEW.nombre, '_', NEW.apellido);
   UPDATE persona
   SET identificador = $identificador 
   WHERE id = OLD.id;
END;



CREATE TRIGGER no_borrar
ON PERSONA
INSTEAD OF DELETE
AS
SET NOCOUNT ON
DECLARE @NOMBRE VARCHAR(30)
SELECT @NOMBRE = D.NOMBRE 
FROM PERSONA P INNER JOIN DELETED D 
ON P.ID_PER=D.ID_PER
IF (@NOMBRE LIKE '%ADMIN%')
BEGIN
PRINT 'NO ES POSIBLE ELIMINAR'
END
ELSE
DELETE FROM PERSONA WHERE NOMBRE=@NOMBRE
GO




CREATE OR REPLACE TRIGGER VALIDARPRECIO 
BEFORE INSERT ON RENTA 
FOR EACH ROW
DECLARE
BEGIN
	IF :NEW.VALOR < 0 THEN
	   :NEW.VALOR := 0;
	END IF;
END;




CREATE OR REPLACE TRIGGER TR_HORARIO BEFORE INSERT ON CLIENTE

BEGIN 
	IF (TO_CHAR(SYSDATE, 'DY') IN ('SAT', 'SUN'))
	OR (TO_CHAR(SYSDATE, 'HH24:MI') NOT BETWEEN '07:00' AND '18:00')
	THEN RAISE_APPLICATION_ERROR(-20500, 'NO SE ENCUENTRA EN HORARIO OPERATIVO, FAVOR DE CONTACTAR A SOPORTE DB');
	END IF;
END;
